// this is here to prevent us from creating config definitions
// without appropriate default, type, description, etc.
module.exports = def => {
  if (!def)
    throw new Error(`unknown config key: ${key}`)
  if (!def.description)
    throw new Error(`config lacks description: ${key}`)
  if (!Object.hasOwnProperty.call(def, 'type'))
    throw new Error(`config lacks type: ${key}`)
  if (!Object.hasOwnProperty.call(def, 'default'))
    throw new Error(`config lacks default: ${key}`)
  const required = [
    'type',
    'description',
    'default',
  ]
  const allowed = [
    'default',
    'type',
    'description',
    'short',
    'typeDescription',
    'defaultDescription',
    'deprecated',
  ]
  for (const req of required) {
    if (!Object.prototype.hasOwnProperty.call(def, req))
      throw new Error(`config lacks ${req}: ${key}`)
  }
  for (const field of Object.keys(def)) {
    if (!allowed.includes(field))
      throw new Error(`config defines unknown field ${field}: ${key}`)
  }
}
